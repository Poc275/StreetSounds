<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="StreetSounds.GroupedTracks"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:StreetSounds"
    xmlns:common="using:StreetSounds.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:m="using:Bing.Maps">

    <Page.Resources>

        <DataTemplate x:Key="My250x250ItemTemplate">
            <Grid HorizontalAlignment="Left" Width="250" Height="250">
                <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
                    <Image Source="{Binding Image}" Stretch="UniformToFill" AutomationProperties.Name="{Binding Title}"/>
                </Border>
                <StackPanel VerticalAlignment="Bottom" Background="{StaticResource ListViewItemOverlayBackgroundThemeBrush}">
                    <TextBlock Text="{Binding Title}" Foreground="{StaticResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextStyle}" Height="60" Margin="15,0,15,0"/>
                    <TextBlock Text="{Binding Username}" Foreground="{StaticResource ListViewItemOverlaySecondaryForegroundThemeBrush}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap" Margin="15,0,15,10"/>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="MyStandard80ItemTemplate">
            <Grid Margin="6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Width="60" Height="60">
                    <Image Source="{Binding Image}" Stretch="UniformToFill"/>
                </Border>
                <StackPanel Grid.Column="1" Margin="10,0,0,0">
                    <TextBlock Text="{Binding Title}" Style="{StaticResource ItemTextStyle}" MaxHeight="40"/>
                    <TextBlock Text="{Binding Username}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap"/>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <!-- App bar button styles -->
        <Style x:Key="AddAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
            <Setter Property="AutomationProperties.AutomationId" Value="AddAppBarButton"/>
            <Setter Property="AutomationProperties.Name" Value="Add to playlist"/>
            <Setter Property="Content" Value="&#xE109;"/>
        </Style>
        <Style x:Key="PlayAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
            <Setter Property="AutomationProperties.AutomationId" Value="PlayAppBarButton"/>
            <Setter Property="AutomationProperties.Name" Value="Play playlist"/>
            <Setter Property="Content" Value="&#xE102;"/>
        </Style>
        <Style x:Key="DeleteAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
            <Setter Property="AutomationProperties.AutomationId" Value="DeleteAppBarButton"/>
            <Setter Property="AutomationProperties.Name" Value="Clear playlist"/>
            <Setter Property="Content" Value="&#xE106;"/>
        </Style>
        <Style x:Key="GlobeAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
            <Setter Property="AutomationProperties.AutomationId" Value="GlobeAppBarButton"/>
            <Setter Property="AutomationProperties.Name" Value="City Sounds"/>
            <Setter Property="Content" Value="&#xE12B;"/>
        </Style>
        <Style x:Key="StreetAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
            <Setter Property="AutomationProperties.AutomationId" Value="StreetAppBarButton"/>
            <Setter Property="AutomationProperties.Name" Value="Get Sounds Near Me"/>
            <Setter Property="Content" Value="&#xE1C3;"/>
        </Style>
        <Style x:Key="MapPinAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
            <Setter Property="AutomationProperties.AutomationId" Value="MapPinAppBarButton"/>
            <Setter Property="AutomationProperties.Name" Value="Get Sounds Near Here"/>
            <Setter Property="Content" Value="&#xE139;"/>
        </Style>
        <Style x:Key="WorldAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
            <Setter Property="AutomationProperties.AutomationId" Value="WorldAppBarButton"/>
            <Setter Property="AutomationProperties.Name" Value="Get Sounds From City..."/>
            <Setter Property="Content" Value="&#xE128;"/>
        </Style>
        <Style x:Key="MoreAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
            <Setter Property="AutomationProperties.AutomationId" Value="MoreAppBarButton"/>
            <Setter Property="AutomationProperties.Name" Value="More"/>
            <Setter Property="Content" Value="&#xE10C;"/>
        </Style>

        <!--
            Collection of grouped items displayed by this page, bound to a subset
            of the complete item list because items in groups cannot be virtualized
        -->
        <CollectionViewSource
            x:Name="groupedItemsViewSource"
            Source="{Binding TrackGroups}"
            IsSourceGrouped="true"
            ItemsPath="TopItems"/>
    </Page.Resources>

    <!-- Bottom App bar -->
    <Page.BottomAppBar>
        <AppBar IsOpen="False">
            <Grid>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" x:Name="modesMenu">
                    <Button x:Name="defaultModeButton" Style="{StaticResource GlobeAppBarButtonStyle}" Click="DefaultModeButton_Click" />
                    <Button x:Name="soundsNearMeModeButton" Style="{StaticResource StreetAppBarButtonStyle}" Click="SoundsNearMeButton_Click" />
                    <Button x:Name="soundsNearHereModeButton" Style="{StaticResource MapPinAppBarButtonStyle}" Click="SoundsNearHereButton_Click" />
                    <Button x:Name="soundsFromCityModeButton" Style="{StaticResource WorldAppBarButtonStyle}" Click="SoundsFromCityButton_Click" />
                    <Button x:Name="moreSoundsButton" Style="{StaticResource MoreAppBarButtonStyle}" Click="MoreSoundsButton_Click" />
                    <!-- Context specfic buttons (hidden by default) -->
                    <Button x:Name="addToPlaylistButton" Style="{StaticResource AddAppBarButtonStyle}" Click="AddToPlaylistButton_Click"
                            Visibility="Collapsed"/>
                    <Button x:Name="playPlaylistButton" Style="{StaticResource PlayAppBarButtonStyle}" Click="PlayPlaylistButton_Click"
                            Visibility="Collapsed" />
                    <Button x:Name="clearPlaylistButton" Style="{StaticResource DeleteAppBarButtonStyle}" Click="ClearPlaylistButton_Click" 
                            Visibility="Collapsed" />
                </StackPanel>
            </Grid>
        </AppBar>
    </Page.BottomAppBar>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.5*" />
            <ColumnDefinition Width="0.5*" />
        </Grid.ColumnDefinitions>

        <!-- Horizontal scrolling grid used in most view states -->
        <m:Map Name="myMap" Credentials="Amtb1dMrbwAnN2nax0fK5uGlcTfAJHf_K7B3hT1yrBvsHu3OEti_uH9P1XkBIVt-" Grid.Row="2" Margin="25,0,0,25"/>
        
        <!-- Progress ring for when we update the tracks model -->
        <ProgressRing x:Name="progressRing" IsActive="False" Foreground="White" Grid.Column="1" Grid.Row="1" Visibility="Collapsed"/>
        
        <!-- Semantic zoom control requires 2 views, 1 for zoomed in and 1 for zoomed out -->
        <SemanticZoom Grid.Column="1" Grid.RowSpan="2">
            <SemanticZoom.ZoomedInView>
                <GridView
                    x:Name="itemGridView"
                    AutomationProperties.AutomationId="ItemGridView"
                    AutomationProperties.Name="Grouped Items"
                    Padding="116,137,40,46"
                    ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}"
                    ItemTemplate="{StaticResource My250x250ItemTemplate}"
                    SelectionMode="Multiple"
                    IsSwipeEnabled="True"
                    IsItemClickEnabled="True"
                    ItemClick="ItemGridView_ItemClick"
                    SelectionChanged="ItemGridView_SelectionChanged">

                    <GridView.ItemsPanel>
                        <ItemsPanelTemplate>                        
                            <VirtualizingStackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </GridView.ItemsPanel>
                    <GridView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <Grid Margin="1,0,0,6">
                                        <Button
                                            AutomationProperties.Name="Group Title"
                                            Click="Header_Click"
                                            Style="{StaticResource TextPrimaryButtonStyle}">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Title}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}" />
                                                <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                                            </StackPanel>
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                            <GroupStyle.Panel>
                                <ItemsPanelTemplate>
                                    <VariableSizedWrapGrid Orientation="Vertical" Margin="0,0,80,0"/>
                                </ItemsPanelTemplate>
                            </GroupStyle.Panel>
                        </GroupStyle>
                    </GridView.GroupStyle>
                </GridView>
            </SemanticZoom.ZoomedInView>
            <!-- Semantic zoomed out view -->
            <SemanticZoom.ZoomedOutView>
                <ListView x:Name="groupListView" Margin="116,137,40,46">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0,0,0,0">
                                <TextBlock Text="{Binding Title}" Foreground="{StaticResource ListViewItemOverlayForegroundThemeBrush}"
                                           Style="{StaticResource TitleTextStyle}" FontSize="20" Margin="12" />
                                <TextBlock Text="{Binding TracksCount}" Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}"
                                           Style="{StaticResource TitleTextStyle}" FontSize="16" Margin="12,40,12,12" />
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </SemanticZoom.ZoomedOutView>
        </SemanticZoom>

        <!-- Vertical scrolling list only used when snapped -->
        <ListView Grid.ColumnSpan="2" Grid.Row="1"
            x:Name="itemListView"
            AutomationProperties.AutomationId="ItemListView"
            AutomationProperties.Name="Grouped Items"
            Visibility="Collapsed"
            Margin="0,-10,0,0"
            Padding="10,0,0,60"
            ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}"
            ItemTemplate="{StaticResource MyStandard80ItemTemplate}"
            SelectionMode="Multiple"
            IsSwipeEnabled="True"
            IsItemClickEnabled="True"
            ItemClick="ItemGridView_ItemClick"
            SelectionChanged="ItemGridView_SelectionChanged">

            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <Grid Margin="7,7,0,0">
                                <Button
                                    AutomationProperties.Name="Group Title"
                                    Click="Header_Click"
                                    Style="{StaticResource TextPrimaryButtonStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Title}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}" />
                                        <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ListView.GroupStyle>
        </ListView>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Text="{StaticResource AppName}" Grid.Column="1" IsHitTestVisible="false" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Padding">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="96,137,10,56"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    The back button and title have different styles when snapped, and the list representation is substituted
                    for the grid displayed in all other view states
                -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <!-- Hide the map in snapped view as it will be too narrow to interact with-->
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="myMap" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                        </ObjectAnimationUsingKeyFrames>
                        <!-- Hide the modes menu in the app bar when the app is snapped -->
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="modesMenu" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                        </ObjectAnimationUsingKeyFrames>
                        <!-- Hide the semantic zoomed out view when the app is snapped -->
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="groupListView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
